{"name":"Notifier","tagline":"","body":"# Notifier\r\n\r\n[![Build Status](https://travis-ci.org/MehrAlsNix/Notifier.svg?branch=develop)](https://travis-ci.org/MehrAlsNix/Notifier) [![Code Climate](https://codeclimate.com/github/MehrAlsNix/Notifier/badges/gpa.svg)](https://codeclimate.com/github/MehrAlsNix/Notifier) [![Test Coverage](https://codeclimate.com/github/MehrAlsNix/Notifier/badges/coverage.svg)](https://codeclimate.com/github/MehrAlsNix/Notifier/coverage) [![Dependency Status](https://www.versioneye.com/user/projects/55c76bc0653762001a003770/badge.svg?style=flat)](https://www.versioneye.com/user/projects/55c76bc0653762001a003770) [![HHVM Status](http://hhvm.h4cc.de/badge/mehr-als-nix/notifier.svg)](http://hhvm.h4cc.de/package/mehr-als-nix/notifier)\r\n\r\n## Desktop Notifications\r\n\r\n`Notifier` acts as a wrapper for desktop notify applications on different operating systems.\r\n \r\n Following notify wrappers are build in and would make checks to chose one of:\r\n \r\n * notify-send (Linux)\r\n * terminal-notifier (Mac)\r\n * toast.exe (Windows) [nels-o/toaster](https://github.com/nels-o/toaster)\r\n\r\n## Install via composer\r\n\r\nAdd a dependency on `mehr-als-nix/notifier` to your project's `composer.json` file.\r\n\r\nHere is a minimal example of a manually created composer.json file that just defines a dependency on `mehr-als-nix/notifier`\r\n```\r\n{\r\n    \"require\": {\r\n        \"mehr-als-nix/notifier\": \"~2\"\r\n    }\r\n}\r\n```\r\n\r\nFor PHP environments prior to version 5.5 use instead:\r\n```\r\n{\r\n    \"require\": {\r\n        \"mehr-als-nix/notifier\": \"~1\"\r\n    }\r\n}\r\n```\r\n\r\n## Usage\r\n\r\nExample:\r\n```\r\n   \\MehrAlsNix\\Notifier\\Notify::getInstance()\r\n       ->sendMessage('Notification', 'This is a desktop message!');\r\n```\r\n\r\n## Extend\r\n\r\nCustom class has to extend from `\\MehrAlsNix\\Notifier\\Notification`\r\n\r\n    <?php\r\n    \r\n    namespace \\Custom\\Notifier;\r\n    \r\n    class GrowlNotifier extends \\MehrAlsNix\\Notifier\\Notification\r\n    {\r\n        /**\r\n         * Notify with `growlnotify`.\r\n         *\r\n         * @param string $title\r\n         * @param string $message\r\n         *\r\n         * @return void\r\n         */\r\n        protected function notify($title, $message)\r\n        {\r\n            $this->execute(\"growlnotify -t '{$title}' -m '{$message}'\");\r\n        }\r\n    \r\n        /**\r\n         * @inheritdoc\r\n         *\r\n         * @return bool\r\n         */\r\n        public function isAvailable()\r\n        {\r\n            if (strtoupper(substr(PHP_OS, 0, 3)) === 'WIN') {\r\n                return (bool) $this->execute('where.exe growlnotify');\r\n            }\r\n            \r\n            return (bool) $this->execute('which growlnotify');\r\n        }\r\n    }\r\n\r\nAnd can then be used like:\r\n\r\n```\r\n    \\MehrAlsNix\\Notifier\\Notify::getInstance('\\Custom\\Notifier\\GrowlNotifier')\r\n        ->sendMessage('Notification', 'This is a desktop message!');\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}